#$creds = Get-Credential
#-Credential $creds 

$zdc ='wn0ntctxzdcpp01'
[string]$ENV = 'XA6.5_UAT'

write-host "Querying $zdc"

Function Get-CitrixApps {
    Param ([Parameter(Mandatory=$true)][string]$DataCollector)
    $allapps = Invoke-Command -ComputerName $DataCollector -ScriptBlock {
        Add-PSSnapin “Citrix.XenApp.Commands”
        $appslist = New-Object "System.Collections.Generic.List[object]"
        $AllApplications = Get-XAApplication
        ForEach ($Application in $AllApplications) {
            $AppGroupObj = Get-XAAccount -BrowserName $Application.BrowserName | Select *

            $appobj = New-Object "System.Collections.Generic.Dictionary[object]"   
            $appobj.Add('BrowserName',$Application.BrowserName)
            $appobj.Add('ApplicationId',$Application.ApplicationId)
            $appobj.Add('Enabled',$Application.Enabled)
            $appobj.Add('FolderPath', $Application.FolderPath)
            $appobj.Add('LoadBalancingApplicationCheckEnabled', $Application.LoadBalancingApplicationCheckEnabled)
            $appobj.Add('CommandLineExecutable', $Application.CommandLineExecutable)
            $appobj.Add('ClientFolder', $Application.ClientFolder)
            $appobj.Add('AccountName', $AppGroupObj.AccountName)
            $appobj.Add('AccountDN', $AppGroupObj.SearchPath)

            $appslist.Add($appobj)
        }

        return $appslist
    }

    write-host "$($allapps.count) applications found"
    return $allapps
}



Function WriteToNeo {
    Param (
        [Parameter(Mandatory=$true)][string]$NeoConfigPath,
        [Parameter(Mandatory=$true)][string]$NeoDriverPath,
        [Parameter(Mandatory=$true)][string]$Query,
        [object]$Parameters
    )
    $results = $null

    try {
        # Import DLLs
        Add-Type -Path "$NeoDriverPath"

        $neoconfig = Get-Content -Raw -Path $NeoConfigPath | ConvertFrom-Json
        $authToken = [Neo4j.Driver.V1.AuthTokens]::Basic($neoconfig.DB_Username,$neoconfig.DB_Password)

        $dbDriver = [Neo4j.Driver.V1.GraphDatabase]::Driver($neoconfig.DB_URI,$authToken)
        $session = $dbDriver.Session()

        if ($Parameters) { $results = $session.WriteTransaction({param ($tx) $tx.Run($Query,$Parameters) }) }
        else { $results = $session.WriteTransaction({param ($tx) $tx.Run($Query) }) }
    } 
    finally {
      $session = $null
      $dbDriver = $null
      
    }
    return $results
}




$allapps = Get-CitrixApps -DataCollector $zdc
write-host "Writing to neo4j database"

$installpath = 'C:\Tools\Temp\birdsnest\Scanners'



$paramsobj = New-Object "System.Collections.Generic.Dictionary[object]"     
$paramsobj.Add('env', $ENV)
$paramsobj.Add('applications',$allapps)

$query = 'WITH $env as envname, $applications as applist ' +
        'MERGE (cenv:CTX_Farm {env:envname}) ' +
        'WITH cenv,envname,applist '+
        'UNWIND applist as app ' +
        'MERGE (n:CTX_Application {id:app.ApplicationID}) ' +
        #'SET n.browsername = app.BrowserName ' +
        'SET n.enabled = app.Enabled ' +
        'SET n.folderpath = app.FolderPath ' +
        #'SET n.clientfolder = app.ClientFolder ' +
        'SET n.environment = envname ' +
        'WITH n,cenv ' +
        'MERGE (n)-[:PUBLISHED_FROM]->(cenv) '+
        'RETURN count(n) '


WriteToNeo -NeoConfigPath "$($installpath)\neoconfig.json" -NeoDriverPath "$($installpath)\Neo4j.Driver.dll" -Query $query -Parameters $paramsobj
